# ----------------------------------------------------------------------------------------------------
# Pipeline to deploy a Function App
# See readme file for info about the contents of the variable group
# ----------------------------------------------------------------------------------------------------
name: $(date:yyyy).$(date:MM).$(date:dd)$(rev:.r)
pool:
  vmImage: ubuntu-latest

variables:
  - group: DurableDemo
  - template: vars/var-service-connections.yml

# ----------------------------------------------------------------------------------------------------
trigger:
  # - none
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - src/Durable.Demo
    exclude: 
      - '**/*.yml'
      - '**/*.yaml'
      - '**/*.bicep'
      - '**/*.md'

# ----------------------------------------------------------------------------------------------------
parameters:
  - name: deployToEnvironment
    displayName: Deploy To
    type: string
    values:
      - DEV
      - QA
      - PROD
      - DEV-QA-PROD
    default: DEV
  - name: runGHASScan
    displayName: Run GHAS Scan
    type: boolean
    default: false
  - name: runMSDevSecOpsScan
    displayName: Run MS DevSecOps Scan
    type: boolean
    default: false

# ----------------------------------------------------------------------------------------------------
stages:
- ${{ if ne(parameters.deployToEnvironment, 'DEV-QA-PROD') }}:
  - template: pipes/function-only-pipe.yml
    parameters:
      environments: ['${{ parameters.deployToEnvironment }}']
      runMSDevSecOpsScan: ${{ parameters.runMSDevSecOpsScan }}
      runGHASScan: ${{ parameters.runGHASScan }}
      singleEnvironment: 'true'

- ${{ if eq(parameters.deployToEnvironment, 'DEV-QA-PROD') }}:
  - template: pipes/function-only-pipe.yml
    parameters:
      environments: ['DEV','QA','PROD']
      runMSDevSecOpsScan: ${{ parameters.runMSDevSecOpsScan }}
      runGHASScan: ${{ parameters.runGHASScan }}
