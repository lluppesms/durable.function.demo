# ------------------------------------------------------------------------------------------------------------------------
# Pipeline to build Test Utility; compiles for both Windows (x64) and Linux; copies EXE to storage for downloading ease
# ------------------------------------------------------------------------------------------------------------------------
# Note: In order for AzFileCopy to work, you need to find the account that runs this pipeline, then add account
#   to the storage account role "Storage Blob Data Contributor"
# ------------------------------------------------------------------------------------------------------------------------
parameters:
- name: environmentName
  default:  'DEV'
- name: blobPrefix
  default: 'Durable-Tester/'

# ------------------------------------------------------------------------------------------------------------------------
jobs:
- deployment: DeployFiles
  displayName: 'Download Artifacts'
  environment: 'DEV'
  
- job: AzureFileCopy
  displayName: 'Copy Files to Azure Storage'

  variables:
    # Bring in environment common variable file
    - template: ../../vars/var-common.yml
    - template: ../../vars/var-source-location-console.yml
    # Bring in environment specific variable files
    - ${{ if eq(lower(parameters.environmentName), 'dev') }}:
      - template: ../../vars/var-dev.yml
    - ${{ if eq(lower(parameters.environmentName), 'qa') }}:
      - template: ../../vars/var-qa.yml
    - ${{ if eq(lower(parameters.environmentName), 'prod') }}:
      - template: ../../vars/var-prod.yml
    - name: environmentNameLower
      value: ${{ lower(parameters.environmentName) }}
    - name: blobPrefix
      value: ${{ parameters.blobPrefix }}

  steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Artifacts'
    inputs:
      buildType: 'current'
      downloadType: 'single'
      downloadPath: '$(System.ArtifactsDirectory)'
      artifactName: 'drop'

  - bash: |
      storageFolderName=$(echo "downloads$(environmentNameLower)" | tr '[:upper:]' '[:lower:]')
      echo "##vso[task.setvariable variable=storageFolderName]$storageFolderName"
    displayName: 'Create Variables'
    continueOnError: true

  - task: CmdLine@2
    inputs:
      script: |
        echo "environmentNameLower=$(environmentNameLower)"
        echo "serviceConnectionName=$(serviceConnectionName)"
        echo "resourceGroupName=$(resourceGroupName)"
        echo "artifactStorageAccountName=$(artifactStorageAccountName)"
        echo "artifactStorageAccountResourceGroup=$(artifactStorageAccountResourceGroup)"
        echo "storageFolderName=$(storageFolderName)"
        echo "blobPrefix=$(blobPrefix)"
        echo "----------------------------------------"
        echo "##[group]Display All Environment Variables:"
        printenv | sort
        echo "##[endgroup]"
    displayName: 'Display Variables'
    continueOnError: true

  - template: list-directory-step-template.yml
    parameters:
      stepName: 'List Files'
      directoryName: $(System.DefaultWorkingDirectory)
      directoryName2: $(build.artifactstagingdirectory)

  - ${{ if ne(variables.artifactStorageAccountName, 'NONE') }}:
    - task: AzurePowerShell@5
      displayName: 'SA: Add Agent FW'
      inputs:
        AzureSubscription: $(serviceConnectionName)
        AzurePowerShellVersion: LatestVersion
        ScriptType: InlineScript
        Inline: |
          $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
          echo "Executing: Add-AzStorageAccountNetworkRule -Name $(artifactStorageAccountName) -ResourceGroupName $(artifactStorageAccountResourceGroup) -IpAddressRange $ip"
          Add-AzStorageAccountNetworkRule -Name $(artifactStorageAccountName) -ResourceGroupName $(artifactStorageAccountResourceGroup) -IPAddressOrRange $ip
          echo "##vso[task.setvariable variable=agentIP]ip"

    - task: AzureFileCopy@6
      displayName: 'AzureFileCopy: win-x64'
      inputs:
        SourcePath: '$(System.ArtifactsDirectory)/drop/win-x64'
        azureSubscription: $(serviceConnectionName)
        Destination: AzureBlob
        storage: $(artifactStorageAccountName)
        ContainerName: $(storageFolderName)
        BlobPrefix: $(blobPrefix)

    - task: AzureFileCopy@6
      displayName: 'AzureFileCopy: Linux'
      inputs:
        SourcePath: '$(System.ArtifactsDirectory)/drop/Linux'
        azureSubscription: $(serviceConnectionName)
        Destination: AzureBlob
        storage: $(artifactStorageAccountName)
        ContainerName: $(storageFolderName)
        BlobPrefix: $(blobPrefix)

    - task: AzurePowerShell@5
      displayName: 'SA: Rmv Agent FW'
      inputs:
        AzureSubscription: $(serviceConnectionName)
        AzurePowerShellVersion: LatestVersion
        ScriptType: InlineScript
        Inline: |
          $ip = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content
          echo "Executing: Remove-AzStorageAccountNetworkRule -Name $(artifactStorageAccountName) -ResourceGroupName $(artifactStorageAccountResourceGroup) -IpAddressRange $ip"
          Remove-AzStorageAccountNetworkRule -Name $(artifactStorageAccountName) -ResourceGroupName $(artifactStorageAccountResourceGroup) -IPAddressOrRange $ip
      condition: succeededOrFailed()

  - ${{ if eq(variables.artifactStorageAccountName, '') }}:
    - bash: |
        echo "No artifact storage account was specified!"
      displayName: 'No Artifact Storage!'
