# ----------------------------------------------------------------------------------------------------
# Template to deploy Azure Resources in a bicep file in one environment
# This template is optimized for a Linux build agent -- see create-infra-win.yml for a Windows build agent
# ----------------------------------------------------------------------------------------------------
parameters:
- name: environmentName
  default: 'DEV'
- name: templateFolderName
  default: 'infra/Bicep'
- name: templateFileName
  default: 'main.bicep'
- name: parameterFileName
  default: 'main.bicepparam' # 'main.parameters.json'
- name: deploymentMode
  default: 'Incremental'  # 'Incremental' | 'Complete' | 'Validation'
- name: parseBicepOutputs
  default: false

# ----------------------------------------------------------------------------------------------------
jobs:
- deployment: CreateInfra
  displayName: Initialize Create Infra
  environment: ${{ parameters.environmentName }}

- job: CreateInfraJob
  displayName: Create Infrastructure
  variables:
    - name: environmentName
      value: ${{ parameters.environmentName }}
    - name: environmentNameUpper
      value: ${{ upper(parameters.environmentName) }}
    - name: environmentNameLower
      value: ${{ lower(parameters.environmentName) }}
    - name: templateFile
      value: '$(Pipeline.Workspace)/s/${{ parameters.templateFolderName }}/${{ parameters.templateFileName }}'
    - name: parameterFile
      value: '$(Pipeline.Workspace)/s/${{ parameters.templateFolderName }}/${{ parameters.parameterFileName }}'

    # Bring in environment common variable file
    - template: ../../vars/var-service-connections.yml
    - template: ../../vars/var-common.yml
    - template: ../../vars/var-source-location-console.yml
    
    # Bring in environment specific variable files
    - ${{ if eq(lower(parameters.environmentName), 'dev') }}:
      - template: ../../vars/var-dev.yml
    - ${{ if eq(lower(parameters.environmentName), 'qa') }}:
      - template: ../../vars/var-qa.yml
    - ${{ if eq(lower(parameters.environmentName), 'prod') }}:
      - template: ../../vars/var-prod.yml

  # ----------------------------------------------------------------------------------------------------
  steps:
  - bash: |
      appNameLower=$(echo "$(appName)" | tr '[:upper:]' '[:lower:]')
      echo "appName=$(appName)"
      echo "appNameLower=$appNameLower"
      echo "##vso[task.setvariable variable=appNameLower]$appNameLower"

      resourceGroupName=$(echo "$(resourceGroupPrefix)_$(environmentNameLower)" | tr '[:upper:]' '[:lower:]')
      echo "resourceGroupName=$resourceGroupName"
      echo "##vso[task.setvariable variable=resourceGroupName]$resourceGroupName"
      
      runDateTime=$(echo $(date '+%Y%m%d-%H%M%S'))
      echo "##vso[task.setvariable variable=runDateTime]$runDateTime"
      echo "runDateTime=$runDateTime"
                                   
      runDateTimeZ=$(echo $(date '+%Y%m%dT%H%M%SZ'))
      echo "##vso[task.setvariable variable=runDateTimeZ]$runDateTimeZ"
      echo "runDateTimeZ=$runDateTimeZ"
    displayName: 'Create Variables'
    continueOnError: true

  - bash: |
      echo "environmentName=${{ parameters.environmentName }}"
      echo "templateFolderName=${{ parameters.templateFolderName }}"
      echo "templateFileName=${{ parameters.templateFileName }}"
      echo "parameterFileName=${{ parameters.parameterFileName }}"
      echo "deploymentMode=${{ parameters.deploymentMode }}"

      echo "##[group]Display All Environment Variables:"
      printenv | sort
      echo "##[endgroup]"

      echo "----------------------------------------"
      echo "##[group]Directory of pipeline workspace:"
      tree -L 4 $(Pipeline.Workspace)
      echo "##[endgroup]"
    displayName: 'Display Variables and Files'
    continueOnError: true

  - task: qetza.replacetokens.replacetokens-task.replacetokens@5
    displayName: 'Update Parameter File'
    inputs:
      targetFiles: $(parameterFile)
      tokenPrefix: '#{'
      tokenSuffix: '}#'

  - task: CmdLine@2
    displayName: Display Parameter File Contents
    continueOnError: true
    inputs:
      script: |
        echo "Bicep File Name: $(templateFile)"
        echo "##[group]Contents of Parameter File  $(parameterFile)"
        cat  $(parameterFile)
        echo "##[endgroup]"

  - ${{ if eq(variables.environmentNameUpper, 'DEV') }}:
    - template: steps-deploy-bicep-template.yml
      parameters:
        serviceConnectionName: $(serviceConnectionDEV)
        parseBicepOutputs: ${{ parameters.parseBicepOutputs }}
  - ${{ if eq(variables.environmentNameUpper, 'QA') }}:
    - template: steps-deploy-bicep-template.yml
      parameters:
        serviceConnectionName: $(serviceConnectionQA)
        parseBicepOutputs: ${{ parameters.parseBicepOutputs }}
  - ${{ if eq(variables.environmentNameUpper, 'PROD') }}:
    - template: steps-deploy-bicep-template.yml
      parameters:
        serviceConnectionName: $(serviceConnectionPROD)
        parseBicepOutputs: ${{ parameters.parseBicepOutputs }}

  - bash: |
      echo "WIPED!" > $(parameterFile)
    displayName: 'Wipe Parameter File'
    condition: always()
