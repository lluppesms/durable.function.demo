# ------------------------------------------------------------------------------------------------------------------------
# Pipeline to build Test Utility; compiles for both Windows (x64) and Linux; copies EXE to storage for downloading ease
# ------------------------------------------------------------------------------------------------------------------------
parameters:
- name: environments
  type: object
  default: ['DEV']
- name: singleEnvironment
  default: 'false'
- name: runGHASScan
  default: 'false'
- name: runMSDevSecOpsScan
  default: 'false'

# ------------------------------------------------------------------------------------------------------------------------
stages:
- stage: ScanApplication
  displayName: Scan Application
  jobs:
    - template: templates/scan-code-template.yml
      parameters:
        environmentName: 'DEV'
        runMSDevSecOpsScan: ${{ parameters.runMSDevSecOpsScan }}
        runGHASScan: ${{ parameters.runGHASScan }}
        codeSection: 'console'

# ----------------------------------------------------------------------------------------------------
- stage: BuildApplication
  displayName: Build Application
  dependsOn: ScanApplication
  jobs:
  #- template: templates/console-app-build-template-vg.yml
  - template: templates/console-app-build-template-kv.yml
    parameters:
      environmentName: 'DEV'

# ----------------------------------------------------------------------------------------------------
- ${{ each environmentName in parameters.environments }} :
  - stage: DeployApp${{ environmentName }}
    displayName: Deploy ${{ environmentName }} Tester
    # Condition is build complete and a single environment is being deployed, 
    # or the environment is 'dev', or if qa/prod, the previous stage (dev->qa or qa->prod) succeeded
    condition: or(eq(${{ parameters.singleEnvironment }}, 'true'), and(eq(upper('${{ environmentName }}'), 'DEV'), succeeded('BuildApplication')), and(eq(upper('${{ environmentName }}'), 'DEV'), succeeded('BuildApplication')), and(eq(upper('${{ environmentName }}'), 'QA'), succeeded('DeployAppDEV')), and(eq(upper('${{ environmentName }}'), 'PROD'), succeeded('DeployAppQA')))
    jobs:
    #- template: templates/console-app-deploy-template-vg.yml
    - template: templates/console-app-deploy-template-kv.yml
      parameters:
        environmentName: ${{ environmentName }}
